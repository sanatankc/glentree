---
import Button from "./system/Button.astro";
import Text from "./system/Text.astro";
import logo from "../images/logo.svg";
import { Image } from "astro:assets";

import PhoneWhite from '../icons/PhoneWhite.svg'

interface Menu {
  title: string;
  link?: string;
  submenu?: {
    title: string;
    link: string;
    newTab?: boolean;
  }[];
}
const menu: Array<Menu> = [
  {
    title: "Home",
    link: "/",
  },
  {
    title: "About Us",
    link: "/about-us",
  },
  {
    title: "Academics",
    submenu: [
      {
        title: "Curriculum",
        link: "/lfl-curriculum/",
      },
      {
        title: "Co-Scholastics",
        link: "/co-scholastics",
      },
      {
        title: "Glentree Clubs",
        link: "/glentree-clubs",
      },
      {
        title: "After-School Activities",
        link: "/after-school",
      },
    ],
  },
  {
    title: "Campuses",
    submenu: [
      {
        title: "Whitefield",
        link: "/glentree-whitefield",
      },
      {
        title: "Sarjapur Road",
        link: "/glentree-sarjapur",
      },
      {
        title: "Bannerghatta Road",
        link: "/glentree-bannerghatta",
      },
    ],
  },
  {
    title: "Admissions",
    submenu: [
      {
        title: "Admission Process",
        link: "/admissions/",
      },
      {
        title: "Scholarship",
        link: "/scholarship/",
      },
    ],
  },
  {
    title: "Career Counselling",
    submenu: [
      {
        title: "Whitefield",
        link: "https://www.mindler.com/schools/glentree2023",
        newTab: true,
      },
      {
        title: "Sarjapur",
        link: "https://www.mindler.com/schools/glentreesarjapur2023",
        newTab: true,
      },
    ],
  },
  // {
  //   title: "Blogs",
  //   link: "/blogs",
  // },
  {
    title: "Resources",
    submenu: [
      {
        title: "Blogs",
        link: "/blogs",
      },
      {
        title: "News & Events",
        link: "/news-events",
      },
    ],
  },
  
];

const { hideMenu = false, applyNowButtonId = null } = Astro.props
---

<div class="w-full fixed z-[99]">
  <div class="py-2 max-md:pt-2 max-md:pb-0 w-full relative z-20 max-md:px-2 transition-all bg-black menu-bar max-md:[&.active]:bg-[#fff6ea] px-12 text-white hidden max-md:flex flex-row items-center justify-between max-md:flex-col max-md:gap-3">
    <div class="flex flex-row justify-between max-md:px-4 max-md:py-1 max-md:w-full gap-6">
      
      <Text type="sm" class="font-bold max-md:text-[15px] max-md:hidden">Admissions Open</Text>
      <div class='max-md:flex hidden flex-row items-center h-full relative -top-[3px]'>
        <div class='w-4'>
          <Image src={PhoneWhite} alt="Phone Icon" class="w-full h-full">
        </div>
        <div class="flex flex-row max-md:text-primary">
          <a target='_blank' href='tel:+917676310000' class="hover:underline font-bold"><Text type={'regular'} class='ml-2 max-md:text-[15px]'>+91 7676310000</Text></a>
        </div>
      </div>

      <div class="max-md:block hidden">
        <form autocomplete="off">
          <div id="menuToggle">
            <input class="menu-checkbox" type="checkbox" />
            <span></span>
            <span></span>
            <span></span>
          </div>
        </form>
      </div>
    </div>
    <div class="flex flex-row items-center h-full gap-8 max-md:gap-3 max-md:hidden">
      <div class='flex flex-row items-center h-full'>
        <!-- <div class='w-6 max-md:w-5'>
          <Image src={emailIconWhite} alt="Email Icon" class="w-full h-full">
        </div> -->
        <a target='_blank' href="mailto:admissionsekamedify@gmail.com" class="hover:underline w-[90%]">
          <Text type={'sm'} class='ml-2 font-bold max-md:text-[15px] '>admissionsekamedify@gmail.com</Text>
        </a>
      </div>
      <div class='flex max-md:hidden flex-row items-center h-full'>
        <div class='w-4 max-md:w-3'>
          <Image src={PhoneWhite} alt="Phone Icon" class="w-full h-full">
        </div>
        <div class="flex flex-row">
          <a target='_blank' href='tel:+919900077180' class="hover:underline font-bold"><Text type={'sm'} class='ml-2 max-md:text-[15px] '>+91 9900077180</Text></a>
          /
          <a target='_blank' href='tel:+919900077181' class="hover:underline font-bold"><Text type={'sm'} class='max-md:text-[15px]'>81</Text></a>
        </div>
      </div>
    </div>
  </div>
  <header
    class="w-screen relative bg-black/80 py-1 px-14 max-md:px-5 box-border flex flex-row justify-between items-center backdrop-blur-md"
  >
    {hideMenu ? (
      <div class="relative z-10 daisy daisy-fixed daisy-1">
        <Image src={logo} alt="Glentree's Logo" />
      </div>
    ) : (
      <a href="/" class="relative z-10 daisy daisy-fixed daisy-1">
        <Image src={logo} alt="Glentree's Logo" />
      </a>
    )}
    {!hideMenu && (
      <div class="flex flex-row items-center max-md:hidden">
        {
          menu.map((item, i) => {
            if (item.submenu && item.submenu.length > 0) {
              return (
                <div
                  class={`relative menu-parent cursor-pointer daisy daisy-2 daisy-fixed`}
                >
                  <div
                    class:list={[
                      "flex flex-row items-center mr-8 max-md:mr-0",
                      i >= menu.length - 1 && "mr-0 max-md:mr-0",
                    ]}
                  >
                    <span class="text-white font-semibold hover:underline">
                      {item.title}
                    </span>
                    <div class="w-6 h-6 ml-1">
                      <svg
                        viewBox="0 0 24 24"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          fill-rule="evenodd"
                          clip-rule="evenodd"
                          d="M5.94524 9.20954C6.16089 8.95794 6.53967 8.9288 6.79127 9.14446L12.0008 13.6098L17.2103 9.14446C17.4619 8.9288 17.8407 8.95794 18.0563 9.20954C18.272 9.46113 18.2429 9.83991 17.9913 10.0556L12.3913 14.8556C12.1666 15.0482 11.835 15.0482 11.6103 14.8556L6.01032 10.0556C5.75872 9.83991 5.72958 9.46113 5.94524 9.20954Z"
                          fill="white"
                        />
                      </svg>
                    </div>
                  </div>
                  <div
                    class="absolute w-[250px] pt-[10px] menu"
                    style={{
                      boxShadow: "0px 10px 20px rgba(0, 0, 0, 0.5)",
                    }}
                  >
                    {item.submenu.map((subitem, j) => (
                      <div
                        class="py-[14px] px-3 bg-[#121212]"
                        style={{
                          borderBottom:
                            j >= item?.submenu?.length - 1
                              ? "none"
                              : "1px solid rgba(255, 255, 255, 0.2)",
                        }}
                      >
                        <a
                          href={subitem.link}
                          target={subitem.newTab ? "_blank" : "_self"}
                          class="text-white font-semibold hover:underline"
                        >
                          {subitem.title}
                        </a>
                      </div>
                    ))}
                  </div>
                </div>
              );
            } else if (item.link) {
              return (
                <a
                  href={item?.link}
                  class="text-white font-semibold hover:underline mr-8 max-md:mr-0 daisy daisy-fixed daisy-2"
                >
                  {item.title}
                </a>
              );
            }
          })
        }
      </div>
    )}
    <div class:list={["flex flex-row items-center relative", hideMenu && 'max-md:!flex']}>
  
      {applyNowButtonId && (
        <div class="w-full h-14 bottom-0 left-0 z-10 flex max-md:hidden items-center justify-center gap-4 mr-8" data-pixel-contact-target>
          <div 
            class="w-4 h-4"
          >
            <Image src={PhoneWhite} alt="Phone" class="w-full h-full object-cover" />
          </div>
          <Text type="sm">+91 76763 10000</Text>
        </div>
      )}
  
      {applyNowButtonId ? (
        <div
        data-apply-now-button={applyNowButtonId}
        class="flex-shrink-0"
        >
          <Button>Enquire Now</Button>
        </div>
      ) : (
        <a
          href="https://application.glen
treeacademy.com"
          target="_blank"
          class="daisy daisy-fixed daisy-3"
        >
          <Button>Enquire Now</Button>
        </a>
      )}
    </div>
  
    {!hideMenu && (
      <div class="hidden">
        <form autocomplete="off">
          <div id="menuToggle">
            <input type="checkbox" />
            <span></span>
            <span></span>
            <span></span>
          </div>
        </form>
    
      </div>
      <div
        class="mobileMenu absolute top-[0px] left-0 w-screen h-screen bg-black flex flex-col pt-[90px] overflow-scroll"
        class="max-md:visible hidden"
      >
        {
          menu.map((item) => {
            if (item.submenu && item.submenu.length > 0) {
              return (
                <div class="mobileMenuParent">
                  <div
                    class="relative py-[14px] px-5 mr-8 max-md:mr-0 w-full"
                    style={{
                      borderBottom: "1px solid rgba(255, 255, 255, 0.2)",
                    }}
                  >
                    <div class="flex flex-row w-full">
                      <span class="text-white font-semibold hover:underline">
                        {item.title}
                      </span>
                      <div class="w-6 h-6 ml-1 -rotate-90 menu-arrow">
                        <svg
                          viewBox="0 0 24 24"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            fill-rule="evenodd"
                            clip-rule="evenodd"
                            d="M5.94524 9.20954C6.16089 8.95794 6.53967 8.9288 6.79127 9.14446L12.0008 13.6098L17.2103 9.14446C17.4619 8.9288 17.8407 8.95794 18.0563 9.20954C18.272 9.46113 18.2429 9.83991 17.9913 10.0556L12.3913 14.8556C12.1666 15.0482 11.835 15.0482 11.6103 14.8556L6.01032 10.0556C5.75872 9.83991 5.72958 9.46113 5.94524 9.20954Z"
                            fill="white"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <div class="subMenu">
                    {item.submenu.map((subMenuItem) => (
                      <div
                        class="relative py-[14px] px-5 mr-8 max-md:mr-0 w-full"
                        style={{
                          borderBottom: "1px solid rgba(255, 255, 255, 0.2)",
                        }}
                      >
                        <a
                          href={subMenuItem.link}
                          class="text-white font-semibold hover:underline pl-5"
                        >
                          {subMenuItem.title}
                        </a>
                      </div>
                    ))}
                  </div>
                </div>
              );
            } else {
              return (
                <div class="mobileMenuParent">
                  <div
                    class="relative py-[14px] px-5 mr-8 max-md:mr-0 w-full"
                    style={{
                      borderBottom: "1px solid rgba(255, 255, 255, 0.2)",
                    }}
                  >
                    <a
                      href={item.link}
                      class="text-white font-semibold hover:underline"
                    >
                      {item.title}
                    </a>
                  </div>
                </div>
              );
            }
          })
        }
      </div>
    )}
  
  
    <div class="hidden">
      <div
        style={{
          width: "18px",
          height: "1.5px",
          color: "#fff",
          backgroundColor: "#fff",
          // transform: 'rotate(180deg)',
        }}
      >
      </div>
      <div
        style={{
          width: "18px",
          height: "1.5px",
          color: "#fff",
          backgroundColor: "#fff",
          marginTop: "3.5px",
          // transform: 'rotate(180deg)',
        }}
      >
      </div>
      <div
        style={{
          width: "18px",
          height: "1.5px",
          color: "#fff",
          backgroundColor: "#fff",
          marginTop: "3.5px",
          // transform: 'rotate(180deg)',
        }}
      >
      </div>
    </div>
  </header>
</div>

<style>
  .menu {
    opacity: 0;
    pointer-events: none;
    transform: translateY(10px);
    transition: all 0.3s ease;
  }
  .menu.visible {
    opacity: 1;
    pointer-events: all;
    transform: translateY(0px);
  }

  #menuToggle {
    display: block;
    position: relative;

    z-index: 1;

    -webkit-user-select: none;
    user-select: none;
  }

  #menuToggle input {
    display: block;
    width: 40px;
    height: 32px;
    position: absolute;
    top: -7px;
    left: -5px;

    cursor: pointer;

    opacity: 0; /* hide this */
    z-index: 2; /* and place it over the hamburger */

    -webkit-touch-callout: none;
  }

  /*
  * Just a quick hamburger
  */
  #menuToggle span {
    display: block;
    width: 25px;
    height: 2px;
    margin-bottom: 5px;
    position: relative;

    background: #cdcdcd;
    border-radius: 3px;

    z-index: 1;

    transform-origin: 4px 0px;

    transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1),
      background 0.5s cubic-bezier(0.77, 0.2, 0.05, 1), opacity 0.55s ease;
  }

  #menuToggle span:first-child {
    transform-origin: 0% 0%;
  }

  #menuToggle span:nth-last-child(2) {
    transform-origin: 0% 100%;
  }

  /* 
  * Transform all the slices of hamburger
  * into a crossmark.
  */

  #menuToggle input:checked ~ span:nth-last-child(3) {
    opacity: 1;
    transform: rotate(45deg) translate(0px, -1px);
    /*   background: #232323; */
  }

  #menuToggle input:checked ~ span:nth-last-child(1) {
    opacity: 1;
    transform: rotate(-45deg) translate(1px, -2px);
    /*   background: #232323; */
  }

  /*
  * But let's hide the middle one.
  */
  #menuToggle input:checked ~ span:nth-last-child(2) {
    opacity: 0;
    transform: rotate(0deg) scale(0.2, 0.2);
  }

  /*
  * Ohyeah and the last one should go the other direction
  */
  #menuToggle input:checked ~ span:nth-last-child(2) {
    transform: rotate(-45deg) translate(0, -1px);
  }

  .mobileMenu {
    opacity: 0;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    pointer-events: none;
  }
  .mobileMenu.visible {
    opacity: 1;
    transform: translateY(0px);
    pointer-events: all;
  }

  .mobileMenuParent .subMenu {
    /* opacity: 0; */
    /* transform: translateY(-10px); */
    transition: all 0.3s ease;
    /* pointer-events: none; */
    max-height: 0;
    overflow: hidden;
  }
</style>

<script>
  const menuParent = document.querySelectorAll(
    ".menu-parent"
  ) as NodeListOf<HTMLDivElement>;
  const menuCheckBox = document.querySelector(
    ".menu-checkbox"
  ) as HTMLInputElement;
  const menuChild = document.querySelectorAll(
    ".menu"
  ) as NodeListOf<HTMLDivElement>;
  menuParent.forEach((el) => {
    let removeTimeout: any = null;
    const menu = el.querySelector(".menu") as HTMLDivElement;
    el.addEventListener("mouseover", () => {
      clearTimeout(removeTimeout);
      menuChild.forEach((elC) => {
        if (elC !== menu) {
          elC.classList.remove("visible");
        }
      });
      setTimeout(() => {
        menu.classList.add("visible");
      }, 0);
    });
    el.addEventListener("mouseout", () => {
      removeTimeout = setTimeout(() => {
        menu.classList.remove("visible");
      }, 50);
    });
    menu.addEventListener("mouseover", () => {
      clearTimeout(removeTimeout);
    });
    menu.addEventListener("mouseout", () => {
      // menu.classList.remove('visible')
    });
  });

  // mobile menu
  const menuToggle = document.querySelector("#menuToggle") as HTMLInputElement;
  const mobileMenu = document.querySelector(".mobileMenu") as HTMLDivElement;

  if (menuToggle && mobileMenu) {
    menuToggle.addEventListener("click", () => {
      mobileMenu.classList.toggle("visible");
    });
  }
  const mobileMenuParents = document.querySelectorAll(
    ".mobileMenuParent"
  ) as NodeListOf<HTMLDivElement>;

  mobileMenuParents.forEach((el) => {
    const subMenu = el.querySelector(".subMenu") as HTMLDivElement;
    el.addEventListener("click", () => {
      subMenu.classList.toggle("visible");
      if (subMenu.classList.contains("visible")) {
        subMenu.style.maxHeight = "100vh";
      } else {
        subMenu.style.maxHeight = "0px";
      }
    });
  });
</script>
